services:
  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: store
      POSTGRES_PASSWORD: storepassword
      POSTGRES_DB: sausage-store
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U store -d sausage-store"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongodb:
    container_name: mongodb
    image: mongo:7
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:27017 || exit 1"]
    #   interval: 30s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 30s

  frontend:
    container_name: frontend
    build: ./frontend
    depends_on:
      - backend-report
    environment:
      - VIRTUAL_HOST=frontend.local
      - VIRTUAL_PORT=80
    # expose:
    #   - "80"

  backend:
    container_name: backend
    build:
      context: ./backend
      args:
        VERSION: "1.0.0"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_URI=jdbc:postgresql://postgresql:5432/sausage-store
      - POSTGRES_USER=store
      - POSTGRES_PASSWORD=storepassword
      - REPORT_PATH=/logs/reports
      - LOG_PATH=/logs
      - VIRTUAL_HOST=backend.local
      - VIRTUAL_PORT=8080

  backend-report:
    container_name: backend-report
    build: ./backend-report
    depends_on:
      - backend
      - mongodb
    environment:
      - MONGO_URI=mongodb://root:rootpassword@mongodb:27017/
      - VIRTUAL_HOST=backend-report.local
      - VIRTUAL_PORT=8080

  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:alpine
    volumes:
      - ./frontend/nginx_test.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"

